import { StyledButton } from "./styled_button.slint";
import { ScrollView } from "std-widgets.slint";

export component MainWindow inherits Window {
    // --- Theme Colors ---
    property <color> color-background: #1e1e1e;       // Dark background
    property <color> color-text: #eeeeee;              // Light text
    property <color> color-text-muted: #aaaaaa;        // Muted text (e.g., time)
    property <color> color-accent: #007acc;           // Accent color (e.g., button hover/focus)
    property <color> color-button: #333333;            // Button background
    property <color> color-button-text: #eeeeee;       // Button text
    property <color> color-statusbar-bg: #111111; // Added status bar background color
    property <length> button-border-radius: 8px;
    width: 800px;
    height: 480px;
    background: color-background; // Apply main background color

    // --- State Properties ---
    in-out property <string> status_text: "Ready"; // Added status text property
    property <bool> show-list-view: false; // State to toggle views
    in property <[string]> list-items: []; // Data for the list view
    in-out property <string> fact: "";
    callback update-fact();
    callback button-pressed(int);
    in-out property <string> current_time: "00:00";
    in-out property <string> wifi_symbol: "üõú‚ùå";
    in-out property <[string]> button-names: [];
    
    // This is just to embed these glyphs into the build
    Text {
        text: "‚å®Ô∏è üÖ∞Ô∏è üî† üî° ‚Ü©Ô∏è ‚èé ‚å´ ‚å¶ üî¢ üî§ üî£ üñ±Ô∏è üñ≤Ô∏è ‚èØÔ∏è ‚è∏Ô∏è ‚èπÔ∏è ‚è∫Ô∏è ‚è≠Ô∏è ‚èÆÔ∏è ‚è© ‚è™ üîä üîâ üîá üìã ‚úÇÔ∏è üìù üóëÔ∏è üñ•Ô∏è üíª üßë‚Äçüíª üîí üîì üîÅ üîÄ üõë ‚¨ÜÔ∏è ‚¨áÔ∏è ‚¨ÖÔ∏è ‚û°Ô∏è ‚ÜîÔ∏è ‚ÜïÔ∏è üîÑ üåê ü¶ä üß≠ üß© üóÇÔ∏è üóÉÔ∏è üóÑÔ∏è üóíÔ∏è üóìÔ∏è üïí üì® üìß üñ®Ô∏è üëã üè† üèÅ üèÉ üí§ üîî üõ†Ô∏è üè∑Ô∏è ‚≠ê üèÜ üßπ üß≤ üß∞ üß™ üöÄ üß≠";
        visible: false;
    }

    VerticalLayout {
        padding: 15px;
        spacing: 10px;

        // --- Header ---
        HorizontalLayout {
            alignment: end;
            height: 30px;
            spacing: 15px;

            // Wifi Symbol
            Text {
                text: root.wifi_symbol;
                vertical-alignment: center;
                color: root.color-text;
            }

            // Time display
            Text {
                text: root.current_time;
                vertical-alignment: center;
                horizontal-alignment: right;
                color: root.color-text-muted;
            }
        }

        // --- Main Content Container ---
        if !root.show-list-view: VerticalLayout {
            // This container stretches vertically
            vertical-stretch: 1;
            horizontal-stretch: 1;

            // View 1: Button Grid
            VerticalLayout {
                spacing: 10px;
                for row in 4: HorizontalLayout {
                    spacing: 10px;
                    for col in 4: StyledButton {
                        text: root.button-names.length > (row * 4 + col) ? root.button-names[row * 4 + col] : ("Button " + (row * 4 + col + 1));
                        base-background: root.color-button;
                        text-color: root.color-button-text;
                        border-radius: root.button-border-radius;
                        hover-background: color-accent;
                        pressed-background: color-accent;
                        clicked => {
                            root.button-pressed(row * 4 + col + 1);
                        }
                    }
                }
            }
        }

            // View 2: List View
        if root.show-list-view: VerticalLayout {
            horizontal-stretch: 1;
            vertical-stretch: 1;
            ScrollView {
                width: 100%;
                height: 100%;
                VerticalLayout {
                    spacing: 5px;
                    padding: 10px;
                    // Iterate forwards, but access items in reverse using calculated index
                    for idx in root.list-items.length: Text {
                        property <int> reverse-idx: root.list-items.length - 1 - idx;
                        text: root.list-items[reverse-idx]; // Access item by reverse index
                        horizontal-alignment: left;
                        color: root.color-text;
                        wrap: word-wrap;
                        height: 20px;
                    }
                    if root.list-items.length == 0: Text {
                        text: "No updates yet!";
                        color: root.color-text-muted;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
            }
        }

        // --- Status Bar ---
        Rectangle {
            height: 25px;
            width: 100%; // Ensure it takes full width
            background: root.color-statusbar-bg;
            // Page Icons Container (aligned right, separate from TouchArea)
            HorizontalLayout {
                spacing: 15px;
                padding-right: 10px;
                padding-left: 10px;
                Text {
                    width: 20px;
                    text: "‚óÄ";
                    horizontal-alignment: left;
                    vertical-alignment: center;
                    color: root.color-text-muted;
                }

                TouchArea {
                // Position over the text area, allow some extra space
                    clicked => {
                        root.show-list-view = !root.show-list-view;
                    }
                    Text { // Status Text inside TouchArea
                        horizontal-alignment: center;
                        vertical-alignment: center;
                        padding: 5px;
                        text: root.status_text;
                        color: root.color-text-muted;
                    }
                }

                Text {
                    width: 20px;
                    text: "‚ñ∂";
                    horizontal-alignment: right;
                    vertical-alignment: center;
                    color: root.color-text-muted;
                }
            }
        }
    }
}
