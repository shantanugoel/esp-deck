import { FooterView } from "./FooterView.slint";
import { ButtonGridView } from "./ButtonGridView.slint";
import { LogListView } from "./LogListView.slint";
import { TabWidget } from "std-widgets.slint"; 
import {Palette, StyleMetrics} from "std-widgets.slint";
import { Dashboard, WidgetItem } from "Dashboard.slint";
import { NowView } from "NowView.slint";


export component MainWindow inherits Window {
    // --- Theme Colors ---
    property <color> color-background: Palette.background;
    property <color> color-text: Palette.foreground;
    property <color> color-text-muted: Palette.alternate-foreground;
    property <color> color-accent: Palette.accent-foreground;
    property <color> color-button: Palette.alternate-background;
    property <color> color-button-text: Palette.foreground;
    property <length> button-border-radius: 8px;
    width: 800px;
    height: 480px;
    background: color-background;
    in-out property <string> status_text: "Ready";
    in-out property <bool> show-list-view: false;
    in property <[string]> list-items: [];
    in-out property <string> fact: "";
    callback update-fact();
    callback button-pressed(int);
    in-out property <string> current_time: "00:00";
    in-out property <string> current_date: "MON, JAN 01";
    in-out property <string> wifi_symbol: "🛜❌";
    in-out property <[string]> button-names: [];
    in-out property <int> current_tab_index: 0;

    // Properties for Dashboard
    in-out property <[WidgetItem]> dashboard_items;
    in property <string> server_widget_1_title: "Device Status";
    in property <string> server_widget_1_value: "Waiting for data...";
    in property <string> server_widget_2_title: "Server Widget";
    in property <string> server_widget_2_value: "Waiting for data...";
    in property <string> server_widget_3_title: "Server Widget";
    in property <string> server_widget_3_value: "Waiting for data...";

    // Properties for NowView weather and status
    in-out property <string> weather_icon: "❓";
    in-out property <string> weather_temp: "--°C";
    in-out property <string> user_status_icon: "🧑‍💻";
    in-out property <string> user_status_text: "Custom Status, Updated via API or automatically, goes here!";
    in-out property <color> user_status_bgcolor: #000000;

    // Dummy invisible text to force-include all weather emojis
    test := Text {
        visible: false;
        text: "☀️ 🌙 ⛅ 🌫️ 🌦️ 🌧️ ❄️ ⛈️ ❓";
        font-size: 20px;
    }

    layout := VerticalLayout {
        padding: 15px;
        spacing: 10px;
        if !root.show-list-view: TabWidget {
            vertical-stretch: 1;
            horizontal-stretch: 1;
            current-index <=> root.current_tab_index;
            Tab {
                title: "Macros";
                VerticalLayout {
                    vertical-stretch: 1;
                    alignment: LayoutAlignment.stretch;
                    horizontal-stretch: 1;
                    padding-top: 10px;
                    ButtonGridView {
                        color-button: root.color-button;
                        color-button-text: root.color-button-text;
                        color-accent: root.color-accent;
                        button-border-radius: root.button-border-radius;
                        button-names: root.button-names;
                        button-pressed(idx) => {
                            root.button-pressed(idx);
                        }
                    }
                }
            }

            Tab {
                title: "Dashboard";
                Dashboard {
                    color-button: root.color-button;
                    items: root.dashboard_items;
                    server_widget_1_title: root.server_widget_1_title;
                    server_widget_1_value: root.server_widget_1_value;
                    server_widget_2_title: root.server_widget_2_title;
                    server_widget_2_value: root.server_widget_2_value;
                    server_widget_3_title: root.server_widget_3_title;
                    server_widget_3_value: root.server_widget_3_value;
                }
            }

            Tab {
                title: "Now";
                NowView {
                    current-date: root.current_date;
                    current-time: root.current_time;
                    weather-icon: root.weather_icon;
                    weather-temp: root.weather_temp;
                    user-status-icon: root.user_status_icon;
                    user-status-text: root.user_status_text;
                    user-status-bgcolor: root.user_status_bgcolor;
                }
            }
        }
        if root.show-list-view: LogListView {
            color-text: root.color-text;
            color-text-muted: root.color-text-muted;
            list-items: root.list-items;
        }
        TouchArea {
            clicked => {
                root.show-list-view = !root.show-list-view;
            }
            FooterView {
                color-text: root.color-text;
                color-text-muted: root.color-text-muted;
                wifi_symbol: root.wifi_symbol;
                current_time: root.current_time;
                status_text: root.status_text;
                show-list-view <=> root.show-list-view;
            }
        }
    }
}
